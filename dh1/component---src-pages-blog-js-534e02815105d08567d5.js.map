{"version":3,"sources":["webpack:///./src/components/Layout.js","webpack:///./src/components/Head.js","webpack:///./src/pages/blog.js"],"names":["Layout","props","className","title","children","Head","isProject","featuredImg","encodeSpecialCharacters","link","favicon","property","content","name","rel","type","href","sizes","src","async","defer","Date","getTime","Blog","posts","useStaticQuery","wp","edges","map","post","i","searchString","replaceString","rawDate","node","date","formattedDate","getMonth","getDate","getFullYear","fancyHtml3","split","join","key","to","slug","dangerouslySetInnerHTML","__html"],"mappings":"uHAAA,uHA4BeA,IAdA,SAAAC,GAEf,OAAO,yBAAKC,WAA8B,SAAhBD,EAAME,MAAmB,OAAS,IAAvC,WACjB,yBAAKD,UAAS,kBAAmC,SAAhBD,EAAME,MAAmB,GAAK,kBAC7D,kBAAC,IAAD,MACA,yBAAKD,UAAU,cACb,wBAAIA,UAAU,cAAcD,EAAME,QAEnCF,EAAMG,UAET,kBAAC,IAAD,S,kCCxBJ,sEAiEeC,IAzDF,SAAC,GAAuC,IAArCF,EAAoC,EAApCA,MAAOG,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YA4BhC,OAFAJ,EAAQA,GAAgB,GAGtB,kBAAC,SAAD,CAAQA,OAAUA,GAAgB,IAArB,+BAAuDK,yBAAyB,EAAOC,KAAM,CACxG,CACE,IAAO,OACP,KAAQ,YACR,KAAQ,CAAEC,gBAKZ,0BAAMC,SAAS,UAAUC,QAAQ,YACjC,0BAAMD,SAAS,WAAWC,QAAO,0BAA4BT,IAC7D,0BAAMQ,SAAS,WAAWC,QAASL,IAEnC,0BAAMM,KAAK,eAAeD,QAAQ,YAClC,0BAAMC,KAAK,gBAAgBD,QAAO,0BAA4BT,IAC9D,0BAAMU,KAAK,gBAAgBD,QAASL,IAEpC,0BAAMO,IAAI,OAAOC,KAAK,YAAYC,KAAMN,IAASO,MAAM,UACvD,4BAAQC,IAAI,iFACVC,OAAK,EAACC,OAAK,IACZd,GAAa,4BAAQY,IAAG,uCAAwC,IAAIG,MAAOC,UAAnD,MAEzB,0BAAMpB,UAAqB,SAAVC,EAAmB,OAAS,Q,kCC3DnD,8EAqEeoB,UA5DF,WACX,IAuBMC,EAvBOC,YAAe,cAsBTC,GAAGF,MAAMG,MACRC,KAAI,SAACC,EAAMC,GAC7B,IAGoBC,EAAcC,EAH5BC,EAAW,IAAIZ,KAAKQ,EAAKK,KAAKC,MAE9BC,EADS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC9FH,EAAQI,YAArB,IAAoCJ,EAAQK,UAA5C,KAA0DL,EAAQM,cAK/EC,GAJcT,EAGU,qBAHIC,EAGkB,KAAMH,EAAKK,KAAKtB,QAFvD6B,MAAMV,GAAcW,KAAKV,GAGnBH,EAAKK,KAAKtB,SAE7B,OACE,wBAAI+B,IAAG,OAASb,EAAK5B,UAAU,QAC7B,kBAAC,IAAD,CAAM0C,GAAE,SAAWf,EAAKK,KAAKW,MAC3B,wBAAI3C,UAAU,cAAc2B,EAAKK,KAAK/B,OACtC,0BAAMD,UAAU,aAAakC,IAE/B,yBAAKU,wBAAyB,CAAEC,OAAQP,SAO9C,OAAQ,6BACN,kBAAC,IAAD,CAAQrC,MAAM,QACZ,kBAAC,IAAD,CAAMA,MAAM,SACZ,yBAAKD,UAAU,iBACb,wBAAIA,UAAU,SACXsB","file":"component---src-pages-blog-js-534e02815105d08567d5.js","sourcesContent":["import React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n//import '../styles/index.scss';\nimport '../styles/wp-styles/index.css';\nimport '../styles/wp-styles/style.css';\nimport '../styles/wp-styles/responsive.css';\nimport '../styles/wp-styles/style-child.css';\n\nimport 'typeface-open-sans';\nimport 'typeface-raleway';\n\nimport '../styles/layout.css';\n\nconst Layout = props =>{\n\nreturn <div className={`${props.title === 'Home' ? 'Home' : ''} home x`}>\n    <div className={`page-contents ${props.title === 'Home' ? '' : 'entry-content'}`}>\n      <Header />\n      <div className=\"headerMeta\">\n        <h1 className=\"page-title\">{props.title}</h1>\n      </div>\n      {props.children}\n    </div>\n    <Footer />\n  </div>\n}\n\nexport default Layout;","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport favicon from '../assets/favicon/favicon.ico';\n\n\nconst Head = ({ title, isProject, featuredImg }) => {\n  const data = graphql`\n    query {\n      wp {\n        portfolios {\n          edges {\n            node {\n              id\n              featuredImage {\n                node {\n                  sourceUrl(size: S)\n                }\n              }\n            }\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n    `\n  \n\n  title = title ? title : '';\n\n  return (\n    <Helmet title={`${title ? title : ''} â€¢ Darkhorse Woodworks, Inc.`} encodeSpecialCharacters={false} link={[\n      {\n        \"rel\": \"icon\",\n        \"type\": \"image/png\",\n        \"href\": { favicon }\n      }\n    ]\n    }>\n\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:title\" content={`Dark Horse Woodworks : ${title}`} />\n      <meta property=\"og:image\" content={featuredImg} />\n\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={`Dark Horse Woodworks : ${title}`} />\n      <meta name=\"twitter:image\" content={featuredImg} />\n\n      <link rel=\"icon\" type=\"image/png\" href={favicon} sizes=\"16x16\" />\n      <script src=\"https://www.google.com/recaptcha/api.js?onload=recaptchaLoaded&render=explicit\"\n        async defer></script>\n      {isProject && <script src={`//platform.houzz.com/js/widgets.js?${new Date().getTime()})`}></script>\n      }\n      <body className={title === 'Home' ? 'Home' : ''} />\n\n    </Helmet>\n  )\n}\n\nexport default Head;","import React from 'react';\nimport Layout from '../components/Layout';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\n\nimport Head from '../components/Head';\n//import blogStyles from './blog.module.scss';\nimport '../styles/blogStyles.css';\n\n\nconst Blog = () => {\n  const data = useStaticQuery(graphql`\n  query {\n    wp {\n    posts {\n      edges {\n        node {\n          date\n          content(format: RENDERED)\n          title(format: RENDERED)\n          slug\n          author {\n            node {\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n  }\n  `);\n\n  const nodes = data.wp.posts.edges;\n  const posts = nodes.map((post, i) => {\n    const rawDate = (new Date(post.node.date));\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const formattedDate = `${months[rawDate.getMonth()]} ${rawDate.getDate()}, ${rawDate.getFullYear()}`\n    const replaceAll = (searchString, replaceString, str) => {\n      return str.split(searchString).join(replaceString);\n    }\n    const fancyHtml2 = replaceAll('https://i1.wp.com/', '//', post.node.content);\n    const fancyHtml3 = post.node.content; // replaceAll('https://i2.wp.com/', '//', fancyHtml2);\n\n    return (\n      <li key={`post${i}`} className=\"post\">\n        <Link to={`/blog/${post.node.slug}`}>\n          <h3 className=\"blog-title\">{post.node.title}</h3>\n          <time className=\"blog-date\">{formattedDate}</time>\n        </Link>\n        <div dangerouslySetInnerHTML={{ __html: fancyHtml3 }}></div>\n\n      </li>\n    )\n  }\n  )\n\n  return (<div>\n    <Layout title=\"Blog\">\n      <Head title=\"Blog\" />\n      <div className=\"entry-content\">\n        <ul className=\"posts\">\n          {posts}\n        </ul>\n      </div>\n    </Layout>\n  </div>\n  )\n}\n\nexport default Blog;"],"sourceRoot":""}